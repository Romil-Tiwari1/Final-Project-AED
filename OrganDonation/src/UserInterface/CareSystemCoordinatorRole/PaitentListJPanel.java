/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.CareSystemCoordinatorRole;

import HealthCentre.DB4OUtil.DB4OUtil;
import HealthCentre.EcoSystem;
import HealthCentre.Enterprise.Enterprise;
import HealthCentre.Network.Network;
import HealthCentre.Organization.CareSystemCoordinatorOrganisation;
import HealthCentre.Organization.DoctorOrganization;
import HealthCentre.Organization.Organization;
import HealthCentre.Person.PatientDirectory;
import HealthCentre.UserAccount.UserAccount;
import HealthCentre.WorkQueue.WorkRequest;
import HomeScreens.TableFormat;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author romiltiwari
 */
public class PaitentListJPanel extends javax.swing.JPanel {

    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private CareSystemCoordinatorOrganisation systemCoordinatorOrg;
    private PatientDirectory patientDirectory;
    private UserAccount userAccount;
    private EcoSystem ecoSystem;
    private Network network;

    /**
     * Creates new form PaitentListJPanel
     */
    public PaitentListJPanel(UserAccount userAccount, EcoSystem system,
            Network network, CareSystemCoordinatorOrganisation systorganization) {
        initComponents();
        this.userAccount = userAccount;
        this.ecoSystem = system;
        this.network = network;
        this.systemCoordinatorOrg = systorganization;
        patientAssignmentTable.getTableHeader().setDefaultRenderer(new TableFormat());
        hospitalTable.getTableHeader().setDefaultRenderer(new TableFormat());
        populateAvailableHospitalListTable();
        populateAssignmentRequestTable();
    }

    /**
     * Description : Populate Available Hospital List Table
     */
    private void populateAvailableHospitalListTable() {

        DefaultTableModel dtm = (DefaultTableModel) hospitalTable.getModel();
        dtm.setRowCount(0);
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise.getEnterpriseType().toString().equals("Hospital")) {
                System.out.println("Hospital Available ");
                Object[] row = new Object[2];
                row[0] = enterprise;
                row[1] = enterprise.getName();
                dtm.addRow(row);
            }
        }
    }

    /**
     * Description : Populate Patient Assignment Request List Table
     */
    public void populateAssignmentRequestTable() {
        DefaultTableModel model = (DefaultTableModel) patientAssignmentTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : systemCoordinatorOrg.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getDoctorRequestSummary();
            row[2] = request.getPatient();
            row[3] = request.getEnterprise();
            row[4] = request.getStatus();
            row[5] = request.getPatient().isEmergencyStatus();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        assignButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        patientAssignmentTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(199, 247, 247));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Patients Requirig Organ Transplant/Donation");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setText("Patient Assignment");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 470, -1, -1));

        assignButton.setBackground(new java.awt.Color(31, 31, 31));
        assignButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        assignButton.setForeground(new java.awt.Color(255, 255, 255));
        assignButton.setText("Assign");
        assignButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });
        add(assignButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 660, 142, 60));

        hospitalTable.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        hospitalTable.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hospital Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hospitalTable.setGridColor(new java.awt.Color(0, 0, 0));
        hospitalTable.setRowHeight(30);
        jScrollPane2.setViewportView(hospitalTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 520, 810, 200));

        patientAssignmentTable.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        patientAssignmentTable.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        patientAssignmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Number", "Summary", "Patient UID", "Hospital Name", "Status", "Emergency"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientAssignmentTable.setGridColor(new java.awt.Color(0, 0, 0));
        patientAssignmentTable.setRowHeight(30);
        jScrollPane4.setViewportView(patientAssignmentTable);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 1140, 200));

        jPanel3.setBackground(new java.awt.Color(31, 31, 31));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Connect Patient to Hospital");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 1628, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 0, 1640, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon("/Users/romiltiwari/Desktop/AED_Final/Final-Project-AED/OrganDonation/src/Images_1/intensive-care-unit.png")); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 450, 200, 200));

        jLabel4.setIcon(new javax.swing.ImageIcon("/Users/romiltiwari/Desktop/AED_Final/Final-Project-AED/OrganDonation/src/Images_1/patient.png")); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), javax.swing.BorderFactory.createCompoundBorder()))));
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 150, 150));
    }// </editor-fold>//GEN-END:initComponents


    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed
        // TODO add your handling code here:
        int row = patientAssignmentTable.getSelectedRow();
        int row1 = hospitalTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Please select<font color='red'> a row</font> from the<font color='green'> Request Table</I></font></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (row1 < 0) {
            JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Please select<font color='red'> a row</font> from the<font color='green'> Hospital Table</I></font></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            WorkRequest request = (WorkRequest) patientAssignmentTable.getValueAt(row, 0);
            if (request.getStatus().equals("Organ Donation Approved. "
                    + "Passing to System Coordinator for Approval")) {

                request.setEnterprise((Enterprise) hospitalTable.getValueAt(row1, 0));
                request.setStatus("Assigned to a Doctor Pool List");
                dB4OUtil.storeSystem(ecoSystem);
                populateAssignmentRequestTable();
                Organization org = null;
                Enterprise enterprise = (Enterprise) hospitalTable.getValueAt(row1, 0);
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof DoctorOrganization) {
                        org = organization;
                        break;
                    }
                }
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    System.out.println(org.getName());
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                    JOptionPane.showMessageDialog(null,
                            new JLabel("<html><h2><I>Patient successfully<font color='green'> assigned</font> to the Hospital.</I></h2></html>"),
                            "Info", JOptionPane.INFORMATION_MESSAGE);
                    populateAssignmentRequestTable();
                } else {
                    JOptionPane.showMessageDialog(null, "No organization present", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Work Request is<font color='red'> already</font> in progress!</I></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        dB4OUtil.storeSystem(ecoSystem);
        populateAssignmentRequestTable();

    }//GEN-LAST:event_assignButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignButton;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable patientAssignmentTable;
    // End of variables declaration//GEN-END:variables
}
