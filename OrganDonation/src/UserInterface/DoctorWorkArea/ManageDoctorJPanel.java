/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.DoctorWorkArea;

import HealthCentre.DB4OUtil.DB4OUtil;
import HealthCentre.EcoSystem;
import HealthCentre.Enterprise.Enterprise;
import HealthCentre.Organization.DoctorOrganization;
import HealthCentre.UserAccount.UserAccount;
import HealthCentre.WorkQueue.WorkRequest;
import HomeScreens.TableFormat;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Toolkit;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author romiltiwari
 */
public class ManageDoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientListJPanel
     */
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private DoctorOrganization doctorOrganization;
    private Enterprise enterprise;
    private EcoSystem ecoSystsem;
    private UserAccount userAccount;

    /**
     * Creates new form Doctor JPanel
     */
    public ManageDoctorJPanel(EcoSystem ecoSystem, UserAccount userAccount,
            DoctorOrganization doctorOrg, Enterprise enterprise) {
        initComponents();
        this.ecoSystsem = ecoSystem;
        this.userAccount = userAccount;
        this.doctorOrganization = doctorOrg;
        this.enterprise = enterprise;
        doctorOrganisationTable.getTableHeader().setDefaultRenderer(new TableFormat());
        doctorAssignmentTable.getTableHeader().setDefaultRenderer(new TableFormat());
        populatePatientInOrganistation();
        populateDoctorAndPatient();
    }

    /**
     * Description: Populate All Patient Enrolled in Organization Table.
     */
    public void populatePatientInOrganistation() {
        DefaultTableModel model = (DefaultTableModel) doctorOrganisationTable
                .getModel();
        model.setRowCount(0);
        for (WorkRequest request : doctorOrganization.getWorkQueue()
                .getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getDoctorRequestSummary();
            row[2] = request.getPatient();
            row[3] = request.getPatient().getName();
            //  row[4] = request.getPatient().getContact();
            row[4] = request.getStatus();

            model.addRow(row);
        }
    }

    /**
     * Description: Populate Doctor and Patient Assignment Table.
     */
    public void populateDoctorAndPatient() {
        DefaultTableModel model = (DefaultTableModel) doctorAssignmentTable
                .getModel();
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue()
                .getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getPatient();
            row[2] = request.getPatient().getName();
            //    row[3] = request.getPatient().getContact();
            row[3] = request.getUserAccount().getUsername();
            row[4] = request.getStatus();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        oraganDonationListLabel = new javax.swing.JLabel();
        assignButton = new javax.swing.JButton();
        treatmentCompletedButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        doctorOrganisationTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        doctorAssignmentTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        doctorIcon = new javax.swing.JLabel();

        setBackground(new java.awt.Color(199, 247, 247));
        setBorder(new javax.swing.border.MatteBorder(null));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        oraganDonationListLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        oraganDonationListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        oraganDonationListLabel.setText("Organ Donation Patient List");
        oraganDonationListLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(0, 0, 0), null, new java.awt.Color(204, 204, 204)));
        add(oraganDonationListLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, 560, 60));

        assignButton.setBackground(new java.awt.Color(31, 31, 31));
        assignButton.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        assignButton.setForeground(new java.awt.Color(255, 255, 255));
        assignButton.setText("Approve Assignment");
        assignButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });
        add(assignButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 450, 250, 50));

        treatmentCompletedButton.setBackground(new java.awt.Color(31, 31, 31));
        treatmentCompletedButton.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        treatmentCompletedButton.setForeground(new java.awt.Color(255, 255, 255));
        treatmentCompletedButton.setText("Treatment Provided");
        treatmentCompletedButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        treatmentCompletedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentCompletedButtonActionPerformed(evt);
            }
        });
        add(treatmentCompletedButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 450, 250, 50));

        doctorOrganisationTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        doctorOrganisationTable.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        doctorOrganisationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Number", "Summary", "Patient UID", "Patient Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        doctorOrganisationTable.setGridColor(new java.awt.Color(0, 0, 0));
        doctorOrganisationTable.setRowHeight(30);
        jScrollPane4.setViewportView(doctorOrganisationTable);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 560, 200));

        doctorAssignmentTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        doctorAssignmentTable.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        doctorAssignmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Number", "Patient UID", "Patient Name", "Assigned to", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        doctorAssignmentTable.setGridColor(new java.awt.Color(0, 0, 0));
        doctorAssignmentTable.setRowHeight(30);
        jScrollPane5.setViewportView(doctorAssignmentTable);

        add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 550, 580, 270));

        jPanel3.setBackground(new java.awt.Color(31, 31, 31));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        jLabel25.setBackground(new java.awt.Color(255, 0, 51));
        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Manage Request");
        jLabel25.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(204, 204, 204)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 764, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1680, -1));

        doctorIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_1/doctor.png"))); // NOI18N
        add(doctorIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 380, 740));
    }// </editor-fold>//GEN-END:initComponents


    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = doctorOrganisationTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(
                    null, new JLabel(
                            "<html><h2><I>Please select a<font color='red'> request number</font> from the<font color='green'> table</I></font></h2></html>")
                    , "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            WorkRequest request = (WorkRequest) doctorOrganisationTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equals("Assigned in Doctor Pool")) {
                request.setStatus("Assign to Doctor " + userAccount.getUsername());
                request.setUserAccount(userAccount);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            } else {
                JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Work Request is<font color='red'> already</font> in progress!</I></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);

                //JOptionPane.showMessageDialog(null, "Work Request is already assigned!" );
            }
            dB4OUtil.storeSystem(ecoSystsem);

            populatePatientInOrganistation();
            populateDoctorAndPatient();
        }

    }//GEN-LAST:event_assignButtonActionPerformed

    private void treatmentCompletedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentCompletedButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = doctorAssignmentTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Please select a<font color='red'> request number</font> from the<font color='green'> table</I></font></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);

            // JOptionPane.showMessageDialog(null, "Please select a row" );
            return;
        } else {
            WorkRequest request = (WorkRequest) doctorAssignmentTable.getValueAt(selectedRow, 0);
            request.setStatus("Treatment Done");
            request.getPatient().setState("Treatment Done");

            dB4OUtil.storeSystem(ecoSystsem);
            populatePatientInOrganistation();
            populateDoctorAndPatient();

            // CELEBRATION
          JOptionPane.showMessageDialog(null, new JLabel("<html><h2>Congratulations transplant is successful<font color='green'><I><B>!!!</B></I></font>!</h2></html>"));
        }

    }//GEN-LAST:event_treatmentCompletedButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignButton;
    private javax.swing.JTable doctorAssignmentTable;
    private javax.swing.JLabel doctorIcon;
    private javax.swing.JTable doctorOrganisationTable;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel oraganDonationListLabel;
    private javax.swing.JButton treatmentCompletedButton;
    // End of variables declaration//GEN-END:variables
}
