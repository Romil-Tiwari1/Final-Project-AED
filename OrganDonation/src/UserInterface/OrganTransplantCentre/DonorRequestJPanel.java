/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.OrganTransplantCentre;

import HealthCentre.DB4OUtil.DB4OUtil;
import HealthCentre.EcoSystem;
import HealthCentre.Enterprise.Enterprise;
import HealthCentre.Network.Network;
import HealthCentre.Organization.ConsentVerificationOrganization;
import HealthCentre.Organization.Organization;
import HealthCentre.Person.Patient;
import HealthCentre.Person.PatientDirectory;
import HealthCentre.Person.PatientRequest;
import HealthCentre.UserAccount.UserAccount;
import HealthCentre.WorkQueue.HealthCareSystemCoordinatorWorkRequest;
import HealthCentre.WorkQueue.WorkRequest;
import HomeScreens.TableFormat;
import java.awt.Color;
import java.awt.Image;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shrutisrivastava
 */
public class DonorRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form VolunteerReceiverRequestJPanel
     */
    private EcoSystem system;
    private PatientRequest patientRequest;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private UserAccount userAccount;
    private Network network;

    public DonorRequestJPanel(EcoSystem system, UserAccount userAccount, Network network) {
        initComponents();
        this.system = system;
        this.userAccount = userAccount;
        this.network = network;
        requestTable.getTableHeader().setDefaultRenderer(new TableFormat());
        populateRequestTable();
    }

    private void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel) requestTable.getModel();

        dtm.setRowCount(0);

        for (PatientRequest patientRequest : system.getPatientRequestDirectory().getPatientRequestList()) {
            Object row[] = new Object[4];
            row[0] = patientRequest;
            row[1] = patientRequest.getName();
            row[2] = patientRequest.getContact();
            row[3] = patientRequest.getStatus();

            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonReject = new javax.swing.JButton();
        buttonApprove = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        uidText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ageText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        contactText = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        genderText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        bloodText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        streetText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cityText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        stateText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        zipText = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        statusText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblProfilePicture = new javax.swing.JLabel();
        dobDateField = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonReject.setBackground(new java.awt.Color(31, 31, 31));
        buttonReject.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        buttonReject.setForeground(new java.awt.Color(255, 255, 255));
        buttonReject.setText("Reject");
        buttonReject.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonReject.setEnabled(false);
        buttonReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRejectActionPerformed(evt);
            }
        });
        add(buttonReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 100, 40));

        buttonApprove.setBackground(new java.awt.Color(31, 31, 31));
        buttonApprove.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        buttonApprove.setForeground(new java.awt.Color(255, 255, 255));
        buttonApprove.setText("Approve");
        buttonApprove.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonApprove.setEnabled(false);
        buttonApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonApproveActionPerformed(evt);
            }
        });
        add(buttonApprove, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 110, 40));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel6.setText("UID");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, -1, -1));

        uidText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(uidText, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 180, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel3.setText("Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 360, -1, 30));

        nameText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(nameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 360, 190, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel7.setText("DOB");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 400, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel8.setText("Age");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, 30));

        ageText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(ageText, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 400, 190, -1));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel16.setText("Contact");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, -1, -1));

        contactText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(contactText, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 450, 180, -1));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel17.setText("Email ID");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 450, -1, 30));

        emailText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(emailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 450, 190, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel9.setText("Gender");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 500, 70, -1));

        genderText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(genderText, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 500, 180, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel10.setText("Organ Type");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 500, -1, 30));

        bloodText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(bloodText, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 500, 190, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel12.setText("Street address");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 600, -1, -1));

        streetText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(streetText, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 600, 176, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel13.setText("City");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 640, -1, -1));

        cityText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(cityText, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 640, 180, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel14.setText("State");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 680, -1, -1));

        stateText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(stateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 680, 180, -1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel15.setText("ZipCode");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 720, -1, -1));

        zipText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(zipText, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 730, 180, -1));

        jButton3.setBackground(new java.awt.Color(31, 31, 31));
        jButton3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("See Details");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 120, 40));

        jPanel3.setBackground(new java.awt.Color(31, 31, 31));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Patient Organ Request Handling");
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 1556, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1580, -1));

        requestTable.setBackground(new java.awt.Color(0, 0, 0));
        requestTable.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        requestTable.setForeground(new java.awt.Color(255, 255, 255));
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UID", "Name", "Contact", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.setFocusable(false);
        requestTable.setGridColor(new java.awt.Color(0, 0, 0));
        requestTable.setRowHeight(30);
        jScrollPane1.setViewportView(requestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 870, 240));

        statusText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(statusText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 580, 200, -1));

        jLabel1.setText("Status");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 11, -1, -1));

        lblProfilePicture.setBackground(new java.awt.Color(0, 0, 0));
        lblProfilePicture.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        add(lblProfilePicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 350, 180, 170));

        dobDateField.setBackground(new java.awt.Color(255, 255, 255));
        dobDateField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dobDateField.setForeground(new java.awt.Color(255, 255, 255));
        add(dobDateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, 180, 30));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel2.setText("Status");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 580, -1, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 550, 20, 230));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 550, 860, 10));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        jLabel5.setText("Location Details");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 560, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonApproveActionPerformed
        // TODO add your handling code here:
        if (!statusText.getText().equals("New Request")) {
            JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Request<font color='red'> can not</font> be approved!</I></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);

            //    JOptionPane.showMessageDialog(null,"Can Not Approve the Request!");
        } else {

            Patient patient = system.getPatientDirectory().addPatient();
            patient.setName(nameText.getText());
            patient.setContact(contactText.getText());

            patient.setPatientID(uidText.getText()); // UID, receiverID
            patient.setName(nameText.getText()); // Name

            patient.setAge(Integer.parseInt(ageText.getText())); // Age
            patient.setGender(genderText.getText()); // gender
            patient.setOrganType(bloodText.getText()); // Blood group
            patient.setStreetAddress(streetText.getText()); // streetAddress
            patient.setCity(cityText.getText()); // city
            patient.setState(stateText.getText()); // state
            patient.setZipCode(Integer.parseInt(zipText.getText())); // zipCode
            patient.setContact(contactText.getText()); // contact
            patient.setEmailID(emailText.getText()); // emailID
            patient.setStatus("Centre Approved"); // status

            for (PatientRequest patientRequest : system.getPatientRequestDirectory().getPatientRequestList()) {

                if (patientRequest.getPatientID().equals(uidText.getText())) {
                    patientRequest.setStatus("Centre Approved");
                    dB4OUtil.storeSystem(system);
                }
            }

            // WORK REQUEST
            WorkRequest request = new HealthCareSystemCoordinatorWorkRequest();

            request.setPatient(patient);
            request.setActionDate(new Date());
            request.setDoctorRequestSummary("Requested for Organ Reception");
            request.setStatus("Assigned to Concent Verification");

            request.setUserAccount(userAccount);

            Enterprise ent = null;
            Organization org = null;

            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getEnterpriseType().toString().equals("ConsentVerification")) {

                    ent = enterprise;
                    System.out.println(enterprise);
                    break;
                }
            }

            for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof ConsentVerificationOrganization) {
                    org = organization;
                    break;
                }
            }

            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(request);
                System.out.println(org.getName());
                userAccount.getWorkQueue().getWorkRequestList().add(request);
                //user.addUserRequest(request);

                dB4OUtil.storeSystem(system);
                populateRequestTable();
                JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Request<font color='green'> approved</font> successfully!</I></h2></html>"));

                //JOptionPane.showMessageDialog(null,"Request Sent Successfully", "Info", JOptionPane.INFORMATION_MESSAGE);
            } else {

                JOptionPane.showMessageDialog(null, "No organization present", "Error", JOptionPane.ERROR_MESSAGE);
            }

            statusText.setText("Centre Approved");
            dB4OUtil.storeSystem(system);
            populateRequestTable();
            //  JOptionPane.showMessageDialog(null,"New patient has been added!");

        }
    }//GEN-LAST:event_buttonApproveActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow < 0) {

            JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Please select<font color='red'> a row</font> from the<font color='green'> table</I></font></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);

            //JOptionPane.showMessageDialog(null,"Please select a row from the table first to View Details!","Warning!",JOptionPane.WARNING_MESSAGE);
        } else {
            //display the details 
            patientRequest = (PatientRequest) requestTable.getValueAt(selectedRow, 0);
            populateRequestDetails(patientRequest);
            buttonApprove.setEnabled(true);
            buttonReject.setEnabled(true);

            if (Integer.parseInt(ageText.getText()) < 18) {
                ageText.setBorder(BorderFactory.createLineBorder(Color.RED));
                ageText.setForeground(Color.red);
            }
            dB4OUtil.storeSystem(system);

        }
    }

    private void populateRequestDetails(PatientRequest patientRequest) {
        uidText.setText(patientRequest.getPatientID());
        nameText.setText(patientRequest.getName());
        dobDateField.setDate(patientRequest.getDob());
        ageText.setText(String.valueOf(patientRequest.getAge()));
        genderText.setText(patientRequest.getGender());

        streetText.setText(patientRequest.getStreetAddress());
        cityText.setText(patientRequest.getCity());
        stateText.setText(patientRequest.getState());
        zipText.setText(String.valueOf(patientRequest.getZipCode()));
        contactText.setText(String.valueOf(patientRequest.getContact()));
        emailText.setText(patientRequest.getEmailID());
        statusText.setText(patientRequest.getStatus());

        if (patientRequest.getdP() != null) {
            //Working line
            byte[] JLabelpictureLabel = patientRequest.getdP();
            ImageIcon i = setPicturebyte(JLabelpictureLabel);
            lblProfilePicture.setIcon(i);
        } else {
            System.err.println("No Image");
        }

        uidText.setEditable(false);
        nameText.setEditable(false);
        ageText.setEditable(false);
        genderText.setEditable(false);
        bloodText.setEditable(false);
        streetText.setEditable(false);
        cityText.setEditable(false);
        stateText.setEditable(false);
        zipText.setEditable(false);
        contactText.setEditable(false);
        emailText.setEditable(false);
        statusText.setEditable(false);
        dobDateField.setEnabled(false);

    }

    private ImageIcon setPicturebyte(byte[] byteArrayImage) {

        ImageIcon imageCar;
        imageCar = new ImageIcon(byteArrayImage);
        Image picCar = imageCar.getImage();
        JLabel pictureLabel1 = new JLabel();
        pictureLabel1.setSize(107, 133);
        Image resizedImage = picCar.getScaledInstance(pictureLabel1.getWidth(), pictureLabel1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon selectedCarPicture = new ImageIcon(resizedImage);
        return selectedCarPicture;


    }//GEN-LAST:event_jButton3ActionPerformed

    private void buttonRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRejectActionPerformed
        // TODO add your handling code here:

        if (!statusText.getText().equals("New Request")) {
            JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Request<font color='red'> can not</font> be rejected!</I></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);

            // JOptionPane.showMessageDialog(null,"Can Not Reject the Request!");
        } else {
            for (PatientRequest patientRequest : system.getPatientRequestDirectory().getPatientRequestList()) {

                if (patientRequest.getName().equals(nameText.getText())) {
                    statusText.setText("Rejected");
                    patientRequest.setStatus("Rejected");
                }
            }

            dB4OUtil.storeSystem(system);
            populateRequestTable();

            JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Request has been<font color='red'> rejected</font>!</I></h2></html>"));

            //JOptionPane.showMessageDialog(null,"Rejected the Patient's Request!");
        }


    }//GEN-LAST:event_buttonRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageText;
    private javax.swing.JTextField bloodText;
    private javax.swing.JButton buttonApprove;
    private javax.swing.JButton buttonReject;
    private javax.swing.JTextField cityText;
    private javax.swing.JTextField contactText;
    private com.toedter.calendar.JDateChooser dobDateField;
    private javax.swing.JTextField emailText;
    private javax.swing.JTextField genderText;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblProfilePicture;
    private javax.swing.JTextField nameText;
    private javax.swing.JTable requestTable;
    private javax.swing.JTextField stateText;
    private javax.swing.JTextField statusText;
    private javax.swing.JTextField streetText;
    private javax.swing.JTextField uidText;
    private javax.swing.JTextField zipText;
    // End of variables declaration//GEN-END:variables
}
